{"ast":null,"code":"import _classCallCheck from \"G:\\\\emVcTself\\\\ReactApp\\\\counter-store\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"G:\\\\emVcTself\\\\ReactApp\\\\counter-store\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"G:\\\\emVcTself\\\\ReactApp\\\\counter-store\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"G:\\\\emVcTself\\\\ReactApp\\\\counter-store\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"G:\\\\emVcTself\\\\ReactApp\\\\counter-store\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"G:\\\\emVcTself\\\\ReactApp\\\\counter-store\\\\src\\\\Components\\\\Countera.jsx\";\n//using Class library\nimport React, { Component } from \"react\";\nimport \"../Sheets/Sheets.css\"; //component-ClassJSX\n\nvar Countera =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Countera, _Component);\n\n  function Countera() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Countera);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Countera)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      tags: [\"tag1:\", \"tag2:\", \"tag3:\"],\n      count: 0,\n      imageUrl: \"http://localhost/photos/200.jpg\"\n    };\n\n    _this.handleBtnIncrement = function () {\n      // console.log(\"increment clicked\", this);\n      _this.setState({\n        count: _this.state.count + 1\n      });\n    };\n\n    _this.otherNewArrowMethod = function () {};\n\n    return _this;\n  }\n\n  _createClass(Countera, [{\n    key: \"render\",\n\n    /*  constructor(){\r\n      super();\r\n      this.handleBtnIncrement = this.handleBtnIncrement.bind(this);\r\n    } */\n    //No.2 ======Special delivery method - that report to the Dom.=========================\n    // necessary method-1\n    value: function render() {\n      //delivery may take some local property_variables here that will be reporting to the Dom.\n      //create provisory local_style back-CSS\n      var style = {\n        backgroundColor: \"red\",\n        font: \"inherit\",\n        border: \"1px solid blue\",\n        padding: \"8px\"\n      }; //end local class-styles\n      //report:\n\n      return React.createElement(\"div\", {\n        className: \"boxit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: this.state.imageUrl,\n        alt: \"JloSmile\",\n        height: \"15%\",\n        width: \"15%\",\n        className: \"boxit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }), React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        style: this.style,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, \" Test Css \"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        style: {\n          font: 40,\n          color: \"Red\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, \" Test Css \"), React.createElement(\"span\", {\n        style: {\n          color: \"blue\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, \" Test Css \"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }), React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"boxtag\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, this.state.tags.length === 0 && \"Please Create a new Tag&&&\", this.rendTags()), React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        className: this.colorBadgeClasses(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, \" \", this.formatCount()), React.createElement(\"button\", {\n        onClick: this.handleBtnIncrement,\n        className: \"btn  btn-m btn-secondary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, \" Click to Increment\")); //end report\n    } //end delivery report\n    //Controlller all functions\n    //No.3 ============= Some other methods to get control==========================\n    //create this.method-2 to map and report list_tags\n\n  }, {\n    key: \"rendTags\",\n    value: function rendTags() {\n      if (this.state.tags.length === 0) return React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, \"There are no tags to report!\");\n      return React.createElement(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, this.state.tags.map(function (tag) {\n        return React.createElement(\"li\", {\n          key: tag,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 77\n          },\n          __self: this\n        }, \" \", tag, \" \");\n      }), \" \");\n    } //end of this.method-2\n    //method-3\n\n  }, {\n    key: \"formatCount\",\n    value: function formatCount() {\n      return \"zero\";\n    } //method-4 CLASSE_condition to get effect color on badgeText\n\n  }, {\n    key: \"colorBadgeClasses\",\n    value: function colorBadgeClasses() {\n      var color_badge = \"badge m-2 badge-\";\n      color_badge += this.state.count === 0 ? \"warning\" : \"primary\";\n      return color_badge;\n    } //method-5\n\n  }, {\n    key: \"usedOldMethod\",\n    //method-7\n    value: function usedOldMethod() {}\n  }]);\n\n  return Countera;\n}(Component); //end class\n//Finally class available to use(importable class in index.js).\n\n\nexport default Countera; //========================******==============================","map":{"version":3,"sources":["G:\\emVcTself\\ReactApp\\counter-store\\src\\Components\\Countera.jsx"],"names":["React","Component","Countera","state","tags","count","imageUrl","handleBtnIncrement","setState","otherNewArrowMethod","style","backgroundColor","font","border","padding","color","length","rendTags","colorBadgeClasses","formatCount","map","tag","color_badge"],"mappings":"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","sourcesContent":["//using Class library\r\nimport React, { Component } from \"react\";\r\n\r\nimport \"../Sheets/Sheets.css\";\r\n\r\n//component-ClassJSX\r\nclass Countera extends Component {\r\n  //No.1 ======= Les champs propriétés de la classe Modèle. ==========================\r\n  state = {\r\n    tags: [\"tag1:\", \"tag2:\", \"tag3:\"],\r\n    count: 0,\r\n    imageUrl: \"http://localhost/photos/200.jpg\"\r\n  };\r\n\r\n  /*  constructor(){\r\n    super();\r\n    this.handleBtnIncrement = this.handleBtnIncrement.bind(this);\r\n  } */\r\n\r\n  //No.2 ======Special delivery method - that report to the Dom.=========================\r\n  // necessary method-1\r\n  render() {\r\n    //delivery may take some local property_variables here that will be reporting to the Dom.\r\n    //create provisory local_style back-CSS\r\n    const style = {\r\n      backgroundColor: \"red\",\r\n      font: \"inherit\",\r\n      border: \"1px solid blue\",\r\n      padding: \"8px\"\r\n    }; //end local class-styles\r\n    //report:\r\n    return (\r\n      <div className=\"boxit\">\r\n        <img\r\n          src={this.state.imageUrl}\r\n          alt=\"JloSmile\"\r\n          height=\"15%\"\r\n          width=\"15%\"\r\n          className=\"boxit\"\r\n        />\r\n        <hr />\r\n        <span style={this.style}> Test Css </span>\r\n        <br />\r\n        <span style={{ font: 40, color: \"Red\" }}> Test Css </span>\r\n        <span style={{ color: \"blue\" }}> Test Css </span>\r\n        <br />\r\n        <hr />\r\n        {/* Here Start Home Video school after JloSmile */}\r\n        <div className=\"boxtag\">\r\n          {this.state.tags.length === 0 && \"Please Create a new Tag&&&\"}\r\n\r\n          {this.rendTags()}\r\n        </div>\r\n        <hr />\r\n        <span className={this.colorBadgeClasses()}> {this.formatCount()}</span>\r\n        <button\r\n          onClick={this.handleBtnIncrement}\r\n          className=\"btn  btn-m btn-secondary\"\r\n        > Click to Increment\r\n        </button>\r\n      \r\n       \r\n      </div>\r\n    ); //end report\r\n  } //end delivery report\r\n\r\n  //Controlller all functions\r\n  //No.3 ============= Some other methods to get control==========================\r\n  //create this.method-2 to map and report list_tags\r\n  rendTags() {\r\n    if (this.state.tags.length === 0)\r\n      return <p>There are no tags to report!</p>;\r\n\r\n    return (\r\n      <ul>\r\n        {this.state.tags.map(tag => (\r\n          <li key={tag}> {tag} </li>\r\n        ))}{\" \"}\r\n      </ul>\r\n    );\r\n  } //end of this.method-2\r\n  //method-3\r\n  formatCount() {\r\n    return \"zero\";\r\n  }\r\n\r\n  //method-4 CLASSE_condition to get effect color on badgeText\r\n  colorBadgeClasses() {\r\n    let color_badge = \"badge m-2 badge-\";\r\n    color_badge += this.state.count === 0 ? \"warning\" : \"primary\";\r\n    return color_badge;\r\n  }\r\n  //method-5\r\n  handleBtnIncrement = () => {\r\n   // console.log(\"increment clicked\", this);\r\n    this.setState({ count: this.state.count + 1 });\r\n  };\r\n\r\n  //method-6\r\n  otherNewArrowMethod = () => {};\r\n  //method-7\r\n  usedOldMethod() {}\r\n} //end class\r\n//Finally class available to use(importable class in index.js).\r\nexport default Countera;\r\n//========================******==============================\r\n"]},"metadata":{},"sourceType":"module"}