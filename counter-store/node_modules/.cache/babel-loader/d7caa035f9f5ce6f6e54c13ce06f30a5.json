{"ast":null,"code":"import _classCallCheck from \"G:\\\\emVcTself\\\\ReactApp\\\\counter-store\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"G:\\\\emVcTself\\\\ReactApp\\\\counter-store\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"G:\\\\emVcTself\\\\ReactApp\\\\counter-store\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"G:\\\\emVcTself\\\\ReactApp\\\\counter-store\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"G:\\\\emVcTself\\\\ReactApp\\\\counter-store\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"G:\\\\emVcTself\\\\ReactApp\\\\counter-store\\\\src\\\\Components\\\\Counter1.jsx\";\n//using Class library\nimport React, { Component } from \"react\";\nimport \"../Sheets/Sheets.css\"; //ClassJSX-extends component\n\nvar Countero =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Countero, _Component);\n\n  function Countero() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Countero);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Countero)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.otherNewArrowMethod = function () {};\n\n    return _this;\n  }\n\n  _createClass(Countero, [{\n    key: \"render\",\n    //No.1 ======= Les champs propriétés de la classe Modèle. ==========================\n    //local only\n\n    /* state = {\r\n       //props data\r\n          value: this.props.items.value \r\n     };\r\n    */\n\n    /*  constructor(){\r\n      super();\r\n      this.handleBtnIncrement = this.handleBtnIncrement.bind(this);\r\n    } */\n    //No.2 ======Special delivery method - that report to the Dom.=========================\n    // necessary method-1\n    value: function render() {\n      var _this2 = this;\n\n      //delivery may take some local property_variables here that will be reporting to the Dom.\n      //create provisory local_style back-CSS\n      //console.log(\"showTheProps\", this.props);\n      //report what you want below the return:\n      //{ this.props.children} or  { this.props.id}  \n      return React.createElement(\"div\", {\n        className: \"boxit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, React.createElement(\"h4\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, \" Item \", this.props.id, \" \"), React.createElement(\"span\", {\n        className: this.colorBadgeClasses(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, \" \", this.formatCount()), React.createElement(\"button\", {\n        //called above the attribut method of the className-atrribut\n        //and then a childFormatCount  \n        // onClick={this.handleBtnIncrement}\n        // onClick={this.doHandleInrement}\n        //  onClick={ () =>this.handleBtnIncrement()}\n        onClick: function onClick() {\n          return _this2.props.onIncrement();\n        } //learn to do it this way\n        // onClick={ () =>this.handleBtnIncrement(arg)}\n        ,\n        className: \"btn  btn-secondary btn-sm\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, \" Click to Increment \"), React.createElement(\"button\", {\n        onClick: function onClick() {\n          return _this2.props.onDelete(_this2.props.items.id);\n        },\n        className: \"btn btn-danger btn-sm m-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, \" Delete\")); //end report\n      //the child component execute onClick props-parent-method\n    } //end delivery \n    //========//Create all functions or methods after render\\\\===============\n    //function-5 with arrow to inherit parent-super-class\n\n    /*handleBtnIncrement = () => {\r\n      // console.log(\"increment clicked\", this);\r\n     // console.log(product);\r\n       this.setState({ value: this.state.value  += 1  });\r\n     };\r\n    */\n    //function-5.1\n\n    /*\r\n    doHandleInrement =()=>{\r\n      this.handleBtnIncrement({ id: 1});\r\n    };\r\n    */\n    //No.3 ======= Some other methods to get control==================\n    //method-3\n\n  }, {\n    key: \"formatCount\",\n    value: function formatCount() {\n      var value = this.state.value;\n      return value === 0 ? \"Zero\" : value;\n    } //method-4 CLASSIC_condition to get changed effect color\n    //create attribut method for a className-attribut\n\n  }, {\n    key: \"colorBadgeClasses\",\n    value: function colorBadgeClasses() {\n      var color_badge = \"badge m-2 badge-\";\n      color_badge += this.state.value === 0 ? \"warning\" : \"primary\";\n      return color_badge;\n    } //method-6\n\n  }, {\n    key: \"usedOldMethod\",\n    //method-7\n    value: function usedOldMethod() {}\n  }]);\n\n  return Countero;\n}(Component); //end class\n//Finally class available to use(importable class in index.js).\n\n\nexport default Countero; //========================******==============================","map":{"version":3,"sources":["G:\\emVcTself\\ReactApp\\counter-store\\src\\Components\\Counter1.jsx"],"names":["React","Component","Countero","otherNewArrowMethod","props","id","colorBadgeClasses","formatCount","onIncrement","onDelete","items","value","state","color_badge"],"mappings":";;;;;;AAAA;AACA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,OAAO,sBAAP,C,CAEA;;IACMC,Q;;;;;;;;;;;;;;;;;;UA6FJC,mB,GAAsB,YAAM,CAAE,C;;;;;;;AA5F9B;AACA;;AACD;;;;;;AAQC;;;;AAKA;AACA;6BACS;AAAA;;AACP;AACA;AAED;AACC;AACA;AACA,aACE;AAAK,QAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAY,KAAKC,KAAL,CAAWC,EAAvB,MAFF,EAII;AAAM,QAAA,SAAS,EAAE,KAAKC,iBAAL,EAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAEG,KAAKC,WAAL,EAFH,CAJJ,EAOE;AACA;AACA;AACA;AACA;AACA;AACA,QAAA,OAAO,EAAG;AAAA,iBAAK,MAAI,CAACH,KAAL,CAAWI,WAAX,EAAL;AAAA,SANV,CAQE;AACD;AATD;AAWE,QAAA,SAAS,EAAC,2BAXZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCAPF,EAqBE;AAAQ,QAAA,OAAO,EAAE;AAAA,iBAAM,MAAI,CAACJ,KAAL,CAAWK,QAAX,CAAoB,MAAI,CAACL,KAAL,CAAWM,KAAX,CAAiBL,EAArC,CAAN;AAAA,SAAjB;AACQ,QAAA,SAAS,EAAC,2BADlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBArBF,CADF,CAPO,CAoCJ;AACH;AAED,K,CAAC;AACJ;AAKC;;AACD;;;;;;AAME;;AACA;;;;;AAKA;AAEA;;;;kCACc;AACZ,UAAMM,KAAK,GAAE,KAAKC,KAAL,CAAWD,KAAxB;AACA,aAAOA,KAAK,KAAK,CAAV,GAAa,MAAb,GAAqBA,KAA5B;AACD,K,CAED;AACA;;;;wCACoB;AAClB,UAAIE,WAAW,GAAG,kBAAlB;AACAA,MAAAA,WAAW,IAAI,KAAKD,KAAL,CAAWD,KAAX,KAAqB,CAArB,GAAyB,SAAzB,GAAqC,SAApD;AACA,aAAOE,WAAP;AACD,K,CAED;;;;AAEA;oCACgB,CAAE;;;;EA/FGZ,S,GAiGrB;AACF;;;AACA,eAAeC,QAAf,C,CACA","sourcesContent":["//using Class library\r\nimport React, { Component } from \"react\";\r\n\r\nimport \"../Sheets/Sheets.css\";\r\n\r\n//ClassJSX-extends component\r\nclass Countero extends Component {\r\n  //No.1 ======= Les champs propriétés de la classe Modèle. ==========================\r\n  //local only\r\n /* state = {\r\n    //props data\r\n       value: this.props.items.value \r\n  };\r\n*/\r\n\r\n\r\n\r\n  /*  constructor(){\r\n    super();\r\n    this.handleBtnIncrement = this.handleBtnIncrement.bind(this);\r\n  } */\r\n\r\n  //No.2 ======Special delivery method - that report to the Dom.=========================\r\n  // necessary method-1\r\n  render() {\r\n    //delivery may take some local property_variables here that will be reporting to the Dom.\r\n    //create provisory local_style back-CSS\r\n \r\n   //console.log(\"showTheProps\", this.props);\r\n    //report what you want below the return:\r\n    //{ this.props.children} or  { this.props.id}  \r\n    return (\r\n      <div className=\"boxit\">\r\n\r\n        <h4> Item { this.props.id} </h4>\r\n      \r\n          <span className={this.colorBadgeClasses()}\r\n         \r\n          > {this.formatCount()}</span>\r\n        <button\r\n        //called above the attribut method of the className-atrribut\r\n        //and then a childFormatCount  \r\n        // onClick={this.handleBtnIncrement}\r\n        // onClick={this.doHandleInrement}\r\n        //  onClick={ () =>this.handleBtnIncrement()}\r\n        onClick={ () =>this.props.onIncrement()}\r\n\r\n          //learn to do it this way\r\n         // onClick={ () =>this.handleBtnIncrement(arg)}\r\n\r\n          className=\"btn  btn-secondary btn-sm\"\r\n        > Click to Increment </button>\r\n\r\n        <button onClick={() => this.props.onDelete(this.props.items.id)} \r\n                className=\"btn btn-danger btn-sm m-2\"\r\n\r\n        > Delete</button>\r\n      \r\n       \r\n      </div>\r\n    ); //end report\r\n    //the child component execute onClick props-parent-method\r\n\r\n  } //end delivery \r\n//========//Create all functions or methods after render\\\\===============\r\n  \r\n\r\n\r\n\r\n //function-5 with arrow to inherit parent-super-class\r\n/*handleBtnIncrement = () => {\r\n  // console.log(\"increment clicked\", this);\r\n // console.log(product);\r\n   this.setState({ value: this.state.value  += 1  });\r\n };\r\n*/\r\n  //function-5.1\r\n  /*\r\n  doHandleInrement =()=>{\r\n    this.handleBtnIncrement({ id: 1});\r\n  };\r\n*/\r\n  //No.3 ======= Some other methods to get control==================\r\n \r\n  //method-3\r\n  formatCount() {\r\n    const value =this.state.value;\r\n    return value === 0? \"Zero\" :value;\r\n  }\r\n\r\n  //method-4 CLASSIC_condition to get changed effect color\r\n  //create attribut method for a className-attribut\r\n  colorBadgeClasses() {\r\n    let color_badge = \"badge m-2 badge-\";  \r\n    color_badge += this.state.value === 0 ? \"warning\" : \"primary\";\r\n    return color_badge;\r\n  }\r\n \r\n  //method-6\r\n  otherNewArrowMethod = () => {};\r\n  //method-7\r\n  usedOldMethod() {}\r\n\r\n} //end class\r\n//Finally class available to use(importable class in index.js).\r\nexport default Countero;\r\n//========================******==============================\r\n"]},"metadata":{},"sourceType":"module"}