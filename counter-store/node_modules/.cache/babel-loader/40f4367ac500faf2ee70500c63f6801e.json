{"ast":null,"code":"import _classCallCheck from \"G:\\\\emVcTself\\\\ReactApp\\\\counter-store\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"G:\\\\emVcTself\\\\ReactApp\\\\counter-store\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"G:\\\\emVcTself\\\\ReactApp\\\\counter-store\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"G:\\\\emVcTself\\\\ReactApp\\\\counter-store\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"G:\\\\emVcTself\\\\ReactApp\\\\counter-store\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"G:\\\\emVcTself\\\\ReactApp\\\\counter-store\\\\src\\\\Components\\\\Counters.jsx\";\n//imrc tab\nimport React, { Component } from 'react';\nimport \"./sheet.css\";\nimport Countero from './Counter1'; //ClassJSX-extends component : cc tab\n\nvar Counters =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Counters, _Component);\n\n  function Counters() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Counters);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Counters)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      img1Src: \"http://localhost/photos/200.jpg\",\n      products: [{\n        id: 1,\n        value: 0\n      }, {\n        id: 2,\n        value: 20\n      }, {\n        id: 3,\n        value: 30\n      }, {\n        id: 4,\n        value: 40\n      }] //delivery method\n\n    };\n    return _this;\n  }\n\n  _createClass(Counters, [{\n    key: \"render\",\n    value: function render() {\n      //report-return the import class and state props-data.\n      //or call whatever function you want below the report-return:\n      //composing component Countero de Counter1 //map properties with keyID\n      //Children\n      // <h4>Item # {item.id}</h4> or id={item.id} or id={props.id}\n      return React.createElement(\"div\", {\n        className: \"boxit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: this.state.img1Src,\n        className: \"boxit\",\n        alt: \"JlovSmile\",\n        height: \"15%\",\n        width: \"15%\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }), this.rendRecaps(), this.state.products.map(function (props) {\n        return React.createElement(Countero, {\n          key: props.id,\n          value: props.value,\n          id: props.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 38\n          },\n          __self: this\n        });\n      })); //end report\n    } // end delivery\n    //---------------------- functions ------------------------------------\n\n  }, {\n    key: \"rendRecaps\",\n    value: function rendRecaps() {\n      return React.createElement(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, \" \", \"Recap # 2: Composing Components \"), React.createElement(\"ol\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, \" \", 'Pass Data'), React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, \" \", 'Raise and handle Events '), React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, \" \", \"Multiple Components in Sync \"), React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, \" \", \"Functional Components \"), React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, \" \", \"Lifecycle Hooks \")));\n    } //end of rendRecaps\n\n  }]);\n\n  return Counters;\n}(Component); //end class\n//must export to work\n\n\nexport default Counters;","map":{"version":3,"sources":["G:\\emVcTself\\ReactApp\\counter-store\\src\\Components\\Counters.jsx"],"names":["React","Component","Countero","Counters","state","img1Src","products","id","value","rendRecaps","map","props"],"mappings":";;;;;;AAAA;AACA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,aAAP;AACA,OAAOC,QAAP,MAAqB,YAArB,C,CAGA;;IACMC,Q;;;;;;;;;;;;;;;;;UAGFC,K,GAAQ;AAAEC,MAAAA,OAAO,EAAE,iCAAX;AACRC,MAAAA,QAAQ,EAAC,CACL;AAAEC,QAAAA,EAAE,EAAE,CAAN;AAASC,QAAAA,KAAK,EAAC;AAAf,OADK,EAEL;AAAED,QAAAA,EAAE,EAAE,CAAN;AAASC,QAAAA,KAAK,EAAC;AAAf,OAFK,EAGL;AAAED,QAAAA,EAAE,EAAE,CAAN;AAASC,QAAAA,KAAK,EAAC;AAAf,OAHK,EAIL;AAAED,QAAAA,EAAE,EAAE,CAAN;AAASC,QAAAA,KAAK,EAAC;AAAf,OAJK,CADD,CASR;;AATQ,K;;;;;;6BAUC;AACL;AACA;AACA;AACA;AACA;AACA,aACG;AAAK,QAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACK;AAAK,QAAA,GAAG,EAAE,KAAKJ,KAAL,CAAWC,OAArB;AACK,QAAA,SAAS,EAAC,OADf;AAEK,QAAA,GAAG,EAAC,WAFT;AAGK,QAAA,MAAM,EAAC,KAHZ;AAIK,QAAA,KAAK,EAAC,KAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADL,EAOM,KAAKI,UAAL,EAPN,EASO,KAAKL,KAAL,CAAWE,QAAX,CAAoBI,GAApB,CAAwB,UAAAC,KAAK;AAAA,eAC/B,oBAAC,QAAD;AAAU,UAAA,GAAG,EAAEA,KAAK,CAACJ,EAArB;AACU,UAAA,KAAK,EAAEI,KAAK,CAACH,KADvB;AAEU,UAAA,EAAE,EAAEG,KAAK,CAACJ,EAFpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAD+B;AAAA,OAA7B,CATP,CADH,CANK,CAwBH;AACL,K,CAAC;AAEN;;;;iCACiB;AAET,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAM,kCAAN,CADN,EAEM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAM,WAAN,CADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAM,0BAAN,CAFJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAM,8BAAN,CAHJ,EAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAM,wBAAN,CAJJ,EAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAM,kBAAN,CALJ,CAFN,CADF;AAaH,K,CAAC;;;;;EAxDiBN,S,GAyDtB;AACD;;;AACA,eAAeE,QAAf","sourcesContent":["//imrc tab\r\nimport React, { Component } from 'react';\r\nimport \"./sheet.css\";\r\nimport Countero from './Counter1'\r\n\r\n\r\n//ClassJSX-extends component : cc tab\r\nclass Counters extends Component {\r\n\r\n    //state-declaration and props\r\n    state = { img1Src: \"http://localhost/photos/200.jpg\" ,\r\n    products:[\r\n        { id: 1, value:0},\r\n        { id: 2, value:20},\r\n        { id: 3, value:30},\r\n        { id: 4, value:40}\r\n    ]\r\n    \r\n    }\r\n    //delivery method\r\n    render() { \r\n        //report-return the import class and state props-data.\r\n        //or call whatever function you want below the report-return:\r\n        //composing component Countero de Counter1 //map properties with keyID\r\n        //Children\r\n        // <h4>Item # {item.id}</h4> or id={item.id} or id={props.id}\r\n        return (\r\n           <div className=\"boxit\">       \r\n                <img src={this.state.img1Src}\r\n                     className=\"boxit\" \r\n                     alt=\"JlovSmile\"\r\n                     height=\"15%\"\r\n                     width=\"15%\"\r\n                /> \r\n                {this.rendRecaps()}  \r\n               \r\n                { this.state.products.map(props => \r\n                <Countero key={props.id} \r\n                          value={props.value} \r\n                          id={props.id}> \r\n                </Countero>)}\r\n                \r\n            </div>  \r\n\r\n        );//end report\r\n    } // end delivery\r\n\r\n//---------------------- functions ------------------------------------\r\n    rendRecaps() {\r\n  \r\n        return (\r\n          <ul>\r\n                <li> {\"Recap # 2: Composing Components \"}</li>\r\n                <ol>\r\n                    <li> {'Pass Data'}</li>\r\n                    <li> {'Raise and handle Events '}</li>\r\n                    <li> {\"Multiple Components in Sync \"}</li>\r\n                    <li> {\"Functional Components \"}</li>\r\n                    <li> {\"Lifecycle Hooks \"}</li>\r\n                </ol>\r\n    \r\n          </ul>\r\n        );\r\n    } //end of rendRecaps\r\n}//end class\r\n//must export to work\r\nexport default Counters;\r\n\r\n\r\n\r\n\r\n   \r\n"]},"metadata":{},"sourceType":"module"}