{"ast":null,"code":"import _classCallCheck from \"G:\\\\emVcTself\\\\ReactApp\\\\counter-store\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"G:\\\\emVcTself\\\\ReactApp\\\\counter-store\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"G:\\\\emVcTself\\\\ReactApp\\\\counter-store\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"G:\\\\emVcTself\\\\ReactApp\\\\counter-store\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"G:\\\\emVcTself\\\\ReactApp\\\\counter-store\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"G:\\\\emVcTself\\\\ReactApp\\\\counter-store\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"G:\\\\emVcTself\\\\ReactApp\\\\counter-store\\\\src\\\\Components\\\\Countera.jsx\";\n//using Class library\nimport React, { Component } from \"react\";\nimport \"./Sheets.css\"; //component-ClassJSX\n\nvar Countera =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Countera, _Component);\n\n  function Countera() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Countera);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Countera)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      imageUrl: \"http://localhost/photos/200.jpg\",\n      count: 0,\n      tags: [\"tag1\", \"tag2\", \"tag3\"]\n    };\n    _this.style = {\n      fontSize: 40,\n      fontWeight: \"bold\",\n      color: \"pink\"\n    };\n\n    _this.handleBtnIncrement = function () {\n      console.log(\"increment clicked\", _assertThisInitialized(_assertThisInitialized(_this)));\n    };\n\n    _this.otheArrowMethod = function () {};\n\n    return _this;\n  }\n\n  _createClass(Countera, [{\n    key: \"render\",\n\n    /*  constructor(){\r\n      super();\r\n      this.handleBtnIncrement = this.handleBtnIncrement.bind(this);\r\n    } */\n    //No.2 ======Special delivery method - that report to the Dom.=========================\n    // necessary method-1\n    value: function render() {\n      //delivery may take some fields here that will be reporting to the Dom.\n      //report:\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: this.state.imageUrl,\n        alt: \"JloSmile\",\n        height: \"15%\",\n        width: \"15%\",\n        className: \"boxit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }), React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        style: this.style,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, \" Test Css \"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        style: {\n          font: 40,\n          color: \"Red\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, \" Test Css \"), React.createElement(\"span\", {\n        style: {\n          color: \"blue\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, \" Test Css \"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }), React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"boxit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, this.state.tags.length === 0 && \"Please Create a new Tag&&&\", this.rendTags()), React.createElement(\"span\", {\n        className: this.colorBadgeClasses(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, \" \", this.formatCount()), React.createElement(\"button\", {\n        onClick: this.handleBtnIncrement,\n        className: \"btn  btn-m btn-secondary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, \"Btn to Increment\")); //end report\n    }\n  }, {\n    key: \"rendTags\",\n    //end delivery report\n    //No.3 ============= Some other methods==========================\n    //create this.method-2 to map and report list_tags\n    value: function rendTags() {\n      if (this.state.tags.length === 0) return React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, \"There are no tags to report!\");\n      return React.createElement(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, this.state.tags.map(function (tag) {\n        return React.createElement(\"li\", {\n          key: tag,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 72\n          },\n          __self: this\n        }, \" \", tag, \" \");\n      }), \" \");\n    }\n  }, {\n    key: \"formatCount\",\n    //end of this.methos-2\n    //method-2\n    value: function formatCount() {\n      return \"zero\";\n    }\n  }, {\n    key: \"colorBadgeClasses\",\n    //method-3 condition to get effect color on badgeText\n    value: function colorBadgeClasses() {\n      var color_badge = \"badge m-2 badge-\";\n      color_badge += this.state.count === 0 ? \"warning\" : \"primary\";\n      return color_badge;\n    }\n  }, {\n    key: \"oldMethod\",\n    //method-6\n    value: function oldMethod() {}\n  }]);\n\n  return Countera;\n}(Component); //end class\n//Finally class available to use(importable class in index.js).\n\n\nexport default Countera; //========================******==============================","map":{"version":3,"sources":["G:\\emVcTself\\ReactApp\\counter-store\\src\\Components\\Countera.jsx"],"names":["React","Component","Countera","state","imageUrl","count","tags","style","fontSize","fontWeight","color","handleBtnIncrement","console","log","otheArrowMethod","font","length","rendTags","colorBadgeClasses","formatCount","map","tag","color_badge"],"mappings":"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","sourcesContent":["//using Class library\r\nimport React, { Component } from \"react\";\r\n\r\nimport \"./Sheets.css\";\r\n\r\n//component-ClassJSX\r\nclass Countera extends Component {\r\n  //No.1 ======= Les champs propriétés de la classes dans État. ==========================\r\n  state = {\r\n    imageUrl: \"http://localhost/photos/200.jpg\",\r\n    count: 0,\r\n    tags: [\"tag1\", \"tag2\", \"tag3\"]\r\n  };\r\n\r\n  /*  constructor(){\r\n    super();\r\n    this.handleBtnIncrement = this.handleBtnIncrement.bind(this);\r\n  } */\r\n\r\n  //No.2 ======Special delivery method - that report to the Dom.=========================\r\n  // necessary method-1\r\n  render() {\r\n    //delivery may take some fields here that will be reporting to the Dom.\r\n\r\n    //report:\r\n    return (\r\n      <div>\r\n        <img\r\n          src={this.state.imageUrl}\r\n          alt=\"JloSmile\"\r\n          height=\"15%\"\r\n          width=\"15%\"\r\n          className=\"boxit\"\r\n        />\r\n        <hr />\r\n        <span style={this.style}> Test Css </span>\r\n        <br />\r\n        <span style={{ font: 40, color: \"Red\" }}> Test Css </span>\r\n        <span style={{ color: \"blue\" }}> Test Css </span>\r\n        <br />\r\n        <hr />\r\n\r\n        {/* Here Start Home Video school after JloSmile */}\r\n\r\n        <div className=\"boxit\">\r\n          {this.state.tags.length === 0 && \"Please Create a new Tag&&&\"}\r\n\r\n          {this.rendTags()}\r\n        </div>\r\n\r\n        <span className={this.colorBadgeClasses()}> {this.formatCount()}</span>\r\n\r\n        <button\r\n          onClick={this.handleBtnIncrement}\r\n          className=\"btn  btn-m btn-secondary\"\r\n        >\r\n          Btn to Increment\r\n        </button>\r\n      </div>\r\n    ); //end report\r\n  }; //end delivery report\r\n\r\n  //No.3 ============= Some other methods==========================\r\n  //create this.method-2 to map and report list_tags\r\n  rendTags() {\r\n    if (this.state.tags.length === 0)\r\n      return <p>There are no tags to report!</p>;\r\n\r\n    return (\r\n      <ul>\r\n        {this.state.tags.map(tag => (\r\n          <li key={tag}> {tag} </li>\r\n        ))}{\" \"}\r\n      </ul>\r\n    );\r\n  } ;//end of this.methos-2\r\n  //method-2\r\n  formatCount() {\r\n    return \"zero\";\r\n  };\r\n\r\n  //method-3 condition to get effect color on badgeText\r\n  colorBadgeClasses() {\r\n    let color_badge = \"badge m-2 badge-\";\r\n    color_badge += this.state.count === 0 ? \"warning\" : \"primary\";\r\n    return color_badge;\r\n  };\r\n  //create provisory local_style back-CSS\r\n  style = {\r\n    fontSize: 40,\r\n    fontWeight: \"bold\",\r\n    color: \"pink\"\r\n  }; //end local class-styles\r\n\r\n  //method-4\r\n  handleBtnIncrement = () => {\r\n    console.log(\"increment clicked\", this);\r\n  };\r\n  //method-5\r\n  otheArrowMethod = () => {};\r\n  //method-6\r\n  oldMethod() {};\r\n} //end class\r\n//Finally class available to use(importable class in index.js).\r\nexport default Countera;\r\n//========================******=============================="]},"metadata":{},"sourceType":"module"}